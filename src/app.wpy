<style lang="less">
page {
    height: 100%;

    .section {
        background: #FBF8F7;
    }
}

// .container {
//     height: 100%;
//     display: flex;
//     flex-direction: column;
//     align-items: center;
//     justify-content: space-between;
//     box-sizing: border-box;
// }

</style>
<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {

    config = {
        pages: [
            "pages/test",
            "pages/uleemall",
            "pages/cart/cart",
            "pages/myCenter/myCenter",
            "pages/goodsDetail/goodsDetail"


        ],
        window: {
            backgroundTextStyle: 'light',
            navigationBarBackgroundColor: '#000',
            navigationBarTitleText: '优礼商城',
            navigationBarTextStyle: 'white'
        },
        tabBar: {
            color: "#9F8D89",
            selectedColor: "#351009",
            backgroundColor: "#fff",
            borderStyle: "white",
            list: [{
                    pagePath: "pages/uleemall",
                    text: "优礼商城",
                    iconPath: "./images/index.png",
                    selectedIconPath: "images/indexSelected.png"
                },
                {
                    pagePath: "pages/test",
                    text: "礼品分类",
                    iconPath: "./images/classfiy.png",
                    selectedIconPath: "images/classfiySelected.png"
                },
                {
                    pagePath: "pages/cart/cart",
                    text: "购物车",
                    iconPath: "./images/cart.png",
                    selectedIconPath: "images/cartSelected.png"
                },
                {
                    pagePath: "pages/myCenter/myCenter",
                    text: "个人中心",
                    iconPath: "./images/my.png",
                    selectedIconPath: "images/mySelected.png"
                },
            ]
        }
    }

    globalData = {
        userInfo: null,
        login: "这是App的数据"
    }

    constructor() {
        super()
        this.use('promisify');
        this.use('requestfix')
        // this is not allowed before super()
        // 拦截request请求
        // this.intercept('request', {
        //     // 发出请求时的回调函数
        //     config(p) {
        //         // 对所有request请求中的OBJECT参数对象统一附加时间戳属性
        //         console.log(p)
        //         // p.timestamp = +new Date();
        //         console.log('config request: ', p);
        //         // 必须返回OBJECT参数对象，否则无法发送请求到服务端
        //         return p;
        //     },

        //     // 请求成功后的回调函数
        //     success(p) {
        //         // 可以在这里对收到的响应数据对象进行加工处理
        //         console.log('request success: ', p);
        //         // 必须返回响应数据对象，否则后续无法对响应数据进行处理
        //         return p;
        //     },

        //     //请求失败后的回调函数
        //     fail(p) {
        //         console.log('request fail: ', p);
        //         // 必须返回响应数据对象，否则后续无法对响应数据进行处理
        //         return p;
        //     },

        //     // 请求完成时的回调函数(请求成功或失败都会被执行)
        //     complete(p) {
        //         console.log('request complete: ', p);
        //     }
        // });
    }

    onLaunch() {
        this.testAsync()
    }

    sleep(s) {
        return new Promise((resolve, reject) => {
            setTimeout(() => {
                resolve('promise resolved')
            }, s * 1000)
        })
    }

    async testAsync() {
        const data = await this.sleep(3)
        console.log(data)
    }

    getUserInfo(cb) {
        const that = this
        if (this.globalData.userInfo) {
            return this.globalData.userInfo
        }
        wepy.getUserInfo({
            success(res) {
                that.globalData.userInfo = res.userInfo
                cb && cb(res.userInfo)
            }
        })
    }
}

</script>
